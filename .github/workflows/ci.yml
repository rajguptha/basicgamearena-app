name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  packages: write

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/basicgamearena-app
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run tests
        run: mvn -B -q test

  build_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: ./image-tag.txt
        env:
          _DUMMY: ok
      - name: Write tag file
        run: echo "${{ env.IMAGE_TAG }}" > image-tag.txt

  scan:
    needs: build_push
    runs-on: ubuntu-latest
    steps:
      - name: Trivy scan (remote image)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          format: 'table'

  deploy_dev:
  if: github.ref == 'refs/heads/main'
  needs: build_push
  runs-on: self-hosted      # <â€” important: run on your PC
  steps:
    - uses: actions/checkout@v4
    - name: Setup kubectl
      uses: azure/setup-kubectl@v4
    - name: Write kubeconfig
      shell: pwsh
      run: |
        echo "${{ secrets.KUBECONFIG_FILE }}" | base64 -d > kubeconfig
        echo "KUBECONFIG=$PWD/kubeconfig" >> $env:GITHUB_ENV
    - name: Install Helm
      uses: azure/setup-helm@v4
    - name: Helm upgrade (dev)
      shell: pwsh
      run: |
        helm upgrade --install basic-game-arena ./helm/basic-game-arena `
          --namespace dev --create-namespace `
          --set image.repository=ghcr.io/${{ github.repository_owner }}/basicgamearena-app `
          --set image.tag=${{ github.sha }}-${{ github.run_number }} `
          --set-string podAnnotations.app\.git\.commit=${{ github.sha }}-${{ github.run_number }} `
          --wait --timeout 5m
